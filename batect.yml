containers:
  deploy-env:
    image: elkodev/ruby-dpl-image:f179fb18eeb91ac0421c8e9bd7f51715eb9a44c2
    volumes:
      - local: .
        container: /code
        options: cached

    working_directory: /code
  build-env:
    image: node:13.8.0
    volumes:
      - local: .
        container: /code
        options: cached
    working_directory: /code
tasks:
  dependencies:
    description: Install project dependencies
    group: Build tasks
    run:
      container: build-env
      command: ./scripts/dependencies.sh
  build:
    description: Compile application typescript to javascript.
    group: Build tasks
    run:
      container: build-env
      command: ./scripts/build.sh
      environment:
        AUTH_CONFIG: ${AUTH_CONFIG}
  test:
    description: Run unit tests for application
    group: Test tasks
    run:
      container: build-env
      command: ./scripts/test.sh
      environment:
        CI: "true"
        AUTH_CONFIG: ${AUTH_CONFIG}
  testWatch:
    description: Run unit tests for application
    group: Test tasks
    run:
      container: build-env
      command: ./scripts/test.sh
  runLocal:
    description: Run app locally.
    group: Deploy tasks
    run:
      ports:
      - local: 3000
        container: 3000
      container: build-env
      command: ./scripts/local.sh
      environment:
        AUTH_CONFIG: ${AUTH_CONFIG}
  deployDev:
    description: Deploy app to dev
    group: Deploy tasks
    run:
      container: deploy-env
      command: ./scripts/deploy.sh
      environment:
        HEROKU_API_KEY: ${HEROKU_API_KEY}
  deployStage:
    description: Deploy app to stage
    group: Deploy tasks
    run:
      container: deploy-env
      command: ./scripts/deploy.sh
      environment:
        HEROKU_API_KEY: ${HEROKU_API_KEY}
  deployProd:
    description: Deploy app to prod
    group: Deploy tasks
    run:
      container: deploy-env
      command: ./scripts/deploy.sh
      environment:
        HEROKU_API_KEY: ${HEROKU_API_KEY}